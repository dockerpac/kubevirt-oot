---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: bridge-1560
  namespace: kcm-system
spec:
  config: '{
        "cniVersion": "0.3.1",
        "name": "bridge-1560",
        "type": "bridge",
        "bridge": "br1560",
        "ipam": {}
        }'
---
apiVersion: cdi.kubevirt.io/v1beta1
kind: DataVolume
metadata:
  name: ubuntu2204
  namespace: kcm-system
  annotations:
    # https://github.com/kubevirt/containerized-data-importer/blob/main/doc/waitforfirstconsumer-storage-handling.md
    cdi.kubevirt.io/storage.bind.immediate.requested: ""
spec:
  source:
    http:
      url: "https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img"
  pvc:
    accessModes:
      - ReadWriteMany
    volumeMode: Block
    resources:
      requests:
        storage: 50Gi
---
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshot
metadata:
  name: goldenimage-ubuntu2204
  namespace: kcm-system
spec:
  #volumeSnapshotClassName: csi-ceph-blockpool
  volumeSnapshotClassName: csi-rbdplugin-snapclass
  source:
    persistentVolumeClaimName: ubuntu2204
---
apiVersion: k0rdent.mirantis.com/v1alpha1
kind: ClusterDeployment
metadata:
  name: kubevirt-demo
  namespace: kcm-system
spec:
  template: kubevirt-standalone-cp-0-2-1
  credential: kubevirt-cluster-identity-cred
  config:
    clusterLabels:
      project: demo
      env: dev
    cluster:
      namespace: kcm-system
    controlPlaneNumber: 1
    workersNumber: 1
    controlPlane:
      #image: ghcr.io/k0rdent-oot/kubevirt-container-disk:debian-latest
      dataVolumes:
        - name: root
          accessModes: ReadWriteMany
          storage: 50Gi
          volumeMode: Block
          storageClassName: block-pool
          source:
            snapshot:
              namespace: kcm-system
              name: goldenimage-ubuntu2204
        - name: data
          accessModes: ReadWriteMany
          storage: 1Gi
          volumeMode: Block
          storageClassName: block-pool
          source:
            blank: {}
      bootstrapCheckStrategy: none
      preStartCommands:
        - passwd -u root
        - echo "root:root" | chpasswd
      additionalNetworkInterfaces:
        - name: bridge-net
          multus:
            networkName: bridge-1560
    worker:
      #image: ghcr.io/k0rdent-oot/kubevirt-container-disk:debian-latest
      dataVolumes:
        - name: root
          accessModes: ReadWriteMany
          storage: 50Gi
          volumeMode: Block
          storageClassName: block-pool
          source:
            snapshot:
              namespace: kcm-system
              name: goldenimage-ubuntu2204
        - name: data
          accessModes: ReadWriteMany
          storage: 1Gi
          volumeMode: Block
          storageClassName: block-pool
          source:
            blank: {}
      bootstrapCheckStrategy: none
      preStartCommands:
        - passwd -u root
        - echo "root:root" | chpasswd
      additionalNetworkInterfaces:
        - name: bridge-net
          multus:
            networkName: bridge-1560
    k0s:
      version: v1.31.5+k0s.0
      api:
        extraArgs: {}
      network:
        vxlanPort: 5789
    cloudControllerManager:
      replicas: 1
      repo: registry.k8s.pac.dockerps.io/k0rdent-enterprise/kubevirt
      name: kubevirt-cloud-controller-manager
      tag: v0.5.1
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: kubevirt-cloud-controller-manager-{{ .Release.Name }}
          matchLabelKeys:
          - pod-template-hash
          topologyKey: topology.kubernetes.io/zone
          maxSkew: 1
          whenUnsatisfiable: DoNotSchedule
    singleArtifactSource:
      enabled: true
      registry: registry.k8s.pac.dockerps.io/k0rdent-enterprise
      k0sURL: https://github.com/k0sproject/k0s/releases/download/v1.31.5+k0s.0
